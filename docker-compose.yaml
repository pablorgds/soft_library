version: "3.9"
services:
  app :
    build:
      args:
        user: www
        uid: 1000
      context: ./
      dockerfile: configdocker/back/Dockerfile
    image: bc_app_php
    container_name: bc_app
    restart: unless-stopped
    working_dir: /var/www/app
    ports:
      - "9000:9000"
    volumes:
      - ./back:/var/www/app
      - ./configdocker/php/:/usr/local/etc/php/conf.d/
    environment:
      APP_ENV: dev
      APP_DEBUG: 1
      XDEBUG_CONFIG: remote_host=host.docker.internal
      PHP_IDE_CONFIG: serverName=localhost
    networks:
      - app-network

  front:
    build:
      context: ./
      dockerfile: configdocker/front/Dockerfile
    image: bc_front_node
    container_name: bc_front
    restart: unless-stopped
    working_dir: /var/www/app/front
    volumes:
      - ./front:/var/www/app/front
      - ./logs/node:/root/.npm/_logs/
    environment:
      NODE_ENV: development
    ports:
      - 80:4200
    networks:
      - app-network

  webserver:
    image: nginx:alpine
    container_name: bc_webserver
    restart: unless-stopped
    volumes:
      - ./back:/var/www/app
      - ./configdocker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./logs/nginx:/var/log/nginx
    ports:
      - "8000:80"
    networks:
      - app-network

#  db:
#    image: mysql:5.7
#    container_name: bc_mysql
#    restart: unless-stopped
#    volumes:
#      - ./db_data:/var/lib/db_data/
#    ports:
#      - "3306:3306"
#    environment:
#      MYSQL_DATABASE: 'bcDb'
#      MYSQL_USER: 'bc_adm'
#      MYSQL_PASSWORD: 'ADMADM'
#      MYSQL_ROOT_PASSWORD: '@DMSERVER'
#    networks:
#      - app-network

#  redis:
#    image: redis:6.2.6
#    container_name: sgo_redis
#    restart: unless-stopped
#    ports:
#    - '6379:6379'
#    volumes:
#    - ./configdocker/redis/redis.conf /usr/local/etc/redis/redis.conf


networks:
  app-network:
    driver: bridge